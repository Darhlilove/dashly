# Dashly Backend Configuration Template
# Copy this file to .env and fill in your actual values

# OpenRouter API Configuration
# Get your API key from: https://openrouter.ai/keys
OPENROUTER_API_KEY=your_openrouter_api_key_here
OPENROUTER_MODEL=anthropic/claude-3.5-sonnet:beta
OPENROUTER_BASE_URL=https://openrouter.ai/api/v1

# Alternative models you can use:
# - anthropic/claude-3.5-sonnet:beta (recommended for SQL)
# - openai/gpt-4o-mini (fast and cost-effective)
# - openai/gpt-4o (most capable)
# - meta-llama/llama-3.1-8b-instruct:free (free option)

# Database Configuration
DATABASE_PATH=data/dashly.db

# API Configuration
API_HOST=0.0.0.0
API_PORT=8000

# Security Configuration
# Generate a secure API key: openssl rand -hex 32
DASHLY_API_KEY=generate_secure_random_key_here
REQUIRE_AUTH=true

# CORS Configuration (comma-separated list of allowed origins)
ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# Development Settings
DEBUG=false
LOG_LEVEL=info

# Rate Limiting
MAX_REQUESTS_PER_HOUR=500
MAX_UPLOADS_PER_HOUR=50

# Production Security Notes:
# 1. Always use HTTPS in production
# 2. Set REQUIRE_AUTH=true
# 3. Use a strong, randomly generated DASHLY_API_KEY
# 4. Restrict ALLOWED_ORIGINS to your actual frontend domains
# 5. Set DEBUG=false and LOG_LEVEL=info or warning
# 6. Consider using environment-specific configuration management
# 7. Never commit .env files to version control